// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Default Popover popover snapshop 1`] = `
<div
  className="popover-container"
>
  <OverlayTrigger
    container={
      Popover {
        "context": Object {},
        "props": Object {
          "children": <span>
            trigger
          </span>,
          "content": "content",
          "placement": "auto",
          "title": "title",
          "trigger": "hover",
        },
        "refs": Object {},
        "setState": [Function],
        "state": null,
        "updater": Updater {
          "_callbacks": Array [],
          "_renderer": ReactShallowRenderer {
            "_context": Object {},
            "_didScheduleRenderPhaseUpdate": false,
            "_dispatcher": Object {
              "readContext": [Function],
              "useCallback": [Function],
              "useContext": [Function],
              "useDebugValue": [Function],
              "useEffect": [Function],
              "useImperativeHandle": [Function],
              "useLayoutEffect": [Function],
              "useMemo": [Function],
              "useReducer": [Function],
              "useRef": [Function],
              "useState": [Function],
            },
            "_element": <Popover
              content="content"
              placement="auto"
              title="title"
              trigger="hover"
            >
              <span>
                trigger
              </span>
            </Popover>,
            "_firstWorkInProgressHook": null,
            "_forcedUpdate": false,
            "_instance": [Circular],
            "_isReRender": false,
            "_newState": null,
            "_numberOfReRenders": 0,
            "_renderPhaseUpdates": null,
            "_rendered": <div
              className="popover-container"
            >
              <OverlayTrigger
                container={[Circular]}
                defaultOverlayShown={false}
                overlay={
                  <ForwardRef(render)
                    title="title"
                  >
                    content
                  </ForwardRef(render)>
                }
                placement="auto"
                trigger="hover"
              >
                <span>
                  trigger
                </span>
              </OverlayTrigger>
            </div>,
            "_rendering": false,
            "_updater": [Circular],
            "_workInProgressHook": null,
          },
        },
      }
    }
    defaultOverlayShown={false}
    overlay={
      <ForwardRef(render)
        title="title"
      >
        content
      </ForwardRef(render)>
    }
    placement="auto"
    trigger="hover"
  >
    <span>
      trigger
    </span>
  </OverlayTrigger>
</div>
`;
